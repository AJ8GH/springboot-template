<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>3.4.2</version>
    <relativePath/>
  </parent>

  <groupId>io.github.aj8gh</groupId>
  <artifactId>spring-boot-skeleton</artifactId>
  <name>${project.artifactId}</name>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>api</module>
    <module>application</module>
    <module>coverage</module>
    <module>messaging</module>
    <module>persistence</module>
    <module>service</module>
  </modules>

  <properties>
    <!-- Project -->
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
    <default.package>skeleton</default.package>
    <start.class>Application</start.class>
    <main.class>${project.groupId}.${default.package}.${start.class}</main.class>
    <final.name>${project.artifactId}</final.name>
    <final.name.sb>${project.artifactId}-sb</final.name.sb>

    <!-- Checkstyle -->
    <checkstyle.config.location>checkstyle.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>suppressions.xml</checkstyle.suppressions.location>
    <checkstyle.phase>validate</checkstyle.phase>

    <!-- Jacoco -->
    <jacoco.phase>test</jacoco.phase>
    <jacoco.ratio.target>0.80</jacoco.ratio.target>
    <jacoco.class.target>0</jacoco.class.target>
    <jacoco.haltOnFailure>false</jacoco.haltOnFailure>

    <!-- OpenAPI -->
    <openapi.input.spec>${project.basedir}/src/main/resources/interface.yaml</openapi.input.spec>
    <openapi.model.package>${project.groupId}.${default.package}.api.model</openapi.model.package>
    <openapi.controller.package>${project.groupId}.${default.package}.api.controller</openapi.controller.package>

    <!-- Versions -->
    <assertj.version>3.27.3</assertj.version>
    <avro.version>1.12.0</avro.version>
    <awaitility.version>4.2.2</awaitility.version>
    <checkstyle.version>0.0.3</checkstyle.version>
    <confluent.version>7.8.0</confluent.version>
    <cucumber.version>7.21.0</cucumber.version>
    <cucumber.messages.version>27.2.0</cucumber.messages.version>
    <embedded.database.version>2.6.0</embedded.database.version>
    <hibernate.validator.version>8.0.2.Final</hibernate.validator.version>
    <jacoco.version>0.8.12</jacoco.version>
    <jackson.version>2.18.2</jackson.version>
    <jackson.annotations.version>2.18.2</jackson.annotations.version>
    <jackson.databind.nullable.version>0.2.6</jackson.databind.nullable.version>
    <javax.annotation.version>1.3.2</javax.annotation.version>
    <javax.servlet.version>4.0.1</javax.servlet.version>
    <javax.validation.version>2.0.1.Final</javax.validation.version>
    <jsr305.version>3.0.2</jsr305.version>
    <junit.jupiter.version>5.11.4</junit.jupiter.version>
    <junit.platform.version>1.9.2</junit.platform.version>
    <liquibase.version>4.31.0</liquibase.version>
    <log4j.version>2.20.0</log4j.version>
    <lombok.version>1.18.36</lombok.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <maven.assembly.version>3.7.1</maven.assembly.version>
    <maven.checkstyle.version>3.6.0</maven.checkstyle.version>
    <maven.enforcer.version>3.5.0</maven.enforcer.version>
    <maven.surefire.version>3.0.0-M9</maven.surefire.version>
    <mockito.version>5.15.2</mockito.version>
    <open.api.maven.version>7.11.0</open.api.maven.version>
    <slf4j.version>2.0.6</slf4j.version>
    <spring.kafka.test.version>3.3.2</spring.kafka.test.version>
    <springboot.version>3.4.2</springboot.version>
    <springdoc.openapi.version>2.8.4</springdoc.openapi.version>
    <testcontainers.postgresql.version>1.18.0</testcontainers.postgresql.version>
    <swagger.annotations.version>2.2.28</swagger.annotations.version>
    <testcontainers.postgresql.version>1.20.4</testcontainers.postgresql.version>
    <wiremock.version>3.0.1</wiremock.version>
  </properties>

  <repositories>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>github</id>
      <name>GitHub AJ8GH Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/aj8gh/checkstyle</url>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>spring.profiles.active</name>
          <value>docker</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>checkstyle</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.version}</version>
          <configuration>
            <finalName>${final.name}</finalName>
            <appendAssemblyId>false</appendAssemblyId>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <archive>
              <index>true</index>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addClasspath>true</addClasspath>
                <mainClass>${main.class}</mainClass>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${springboot.version}</version>
          <executions>
            <execution>
              <id>repackage</id>
              <phase>package</phase>
              <goals>
                <goal>repackage</goal>
              </goals>
              <configuration>
                <mainClass>${main.class}</mainClass>
                <executable>true</executable>
                <finalName>${final.name.sb}</finalName>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <excludes>
              <exclude>
                <groupId>${project.groupId}</groupId>
                <artifactId>coverage</artifactId>
              </exclude>
            </excludes>
            <mainClass>${main.class}</mainClass>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.version}</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <configuration>
            <excludes>
              <exclude>io/github/aj8gh/**/Application.*</exclude>
              <exclude>io/github/aj8gh/**/config/**/*</exclude>
              <exclude>io/github/aj8gh/**/*MapperImpl.*</exclude>
              <exclude>io/github/aj8gh/skeleton/api/controller/ApiUtil.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>${jacoco.phase}</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <haltOnFailure>${jacoco.haltOnFailure}</haltOnFailure>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>INSTRUCTION</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${jacoco.ratio.target}</minimum>
                      </limit>
                      <limit>
                        <counter>CLASS</counter>
                        <value>MISSEDCOUNT</value>
                        <maximum>${jacoco.class.target}</maximum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <bannedDependencies>
                    <searchTransitive>true</searchTransitive>
                    <excludes>
                      <exclude>org.apache.logging.log4j:*:(,2.17.1]</exclude>
                    </excludes>
                  </bannedDependencies>
                  <dependencyConvergence/>
                  <banDuplicatePomDependencyVersions/>
                  <requireJavaVersion>
                    <version>[17,)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.checkstyle.version}</version>
          <dependencies>
            <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>checkstyle</id>
              <phase>${checkstyle.phase}</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${open.api.maven.version}</version>
          <executions>
            <execution>
              <id>generate-interface-schema</id>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <inputSpec>${openapi.input.spec}</inputSpec>
                <generatorName>spring</generatorName>
                <library>spring-boot</library>
                <generateModels>true</generateModels>
                <generateModelTests>false</generateModelTests>
                <generateApiTests>false</generateApiTests>
                <generateModelDocumentation>true</generateModelDocumentation>
                <generateApiDocumentation>true</generateApiDocumentation>
                <modelPackage>${openapi.model.package}</modelPackage>
                <apiPackage>${openapi.controller.package}</apiPackage>
                <invokerPackage>${openapi.controller.package}.inv</invokerPackage>
                <configOptions>
                  <additionalModelTypeAnnotations>
                    @lombok.Generated
                    @lombok.Builder(toBuilder = true)
                  </additionalModelTypeAnnotations>
                  <additionalEnumTypeAnnotations>@lombok.Generated</additionalEnumTypeAnnotations>
                  <interfaceOnly>true</interfaceOnly>
                  <useTags>true</useTags>
                  <skipDefaultInterface>true</skipDefaultInterface>
                  <library>spring-boot</library>
                </configOptions>
                <typeMappings>
                  <typeMapping>OffsetDateTime=Instant</typeMapping>
                </typeMappings>
                <importMappings>
                  <importMapping>java.time.OffsetDateTime=java.time.Instant</importMapping>
                </importMappings>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro.version}</version>
          <configuration>
            <sourceDirectory>${project.basedir}/src/main/avro</sourceDirectory>
            <outputDirectory>${project.basedir}/target/generated-sources</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <id>schemas</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>schema</goal>
                <goal>protocol</goal>
                <goal>idl-protocol</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>

      <!-- Project -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>application</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>messaging</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>service</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Spring -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${springboot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc.openapi.version}</version>
      </dependency>

      <!-- Database -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>${liquibase.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate.validator.version}</version>
      </dependency>

      <!-- Util -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>

      <!-- CodeGen -->
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson.databind.nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger.annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${javax.validation.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>

      <!-- kafka -->
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-avro-serializer</artifactId>
        <version>${confluent.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-schema-registry-client</artifactId>
        <version>${confluent.version}</version>
      </dependency>

      <!-- Test -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock</artifactId>
        <version>${wiremock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${springboot.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.kafka</groupId>
        <artifactId>spring-kafka-test</artifactId>
        <scope>test</scope>
        <version>${spring.kafka.test.version}</version>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>io.cucumber</groupId>
            <artifactId>messages</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit-platform-engine</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-spring</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>messages</artifactId>
        <version>${cucumber.messages.version}</version>
      </dependency>
      <dependency>
        <groupId>io.zonky.test</groupId>
        <artifactId>embedded-database-spring-test</artifactId>
        <version>${embedded.database.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${testcontainers.postgresql.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
  </dependencies>
</project>
